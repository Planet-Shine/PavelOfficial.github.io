{"version":3,"sources":["app/templates/employeeTemplates.js","app/js/app.module.js","app/js/app.config.js","app/js/services/employeeData.js","app/js/avatarUploader/avatarUploader.module.js","app/js/avatarUploader/avatarUploader.component.js","app/js/department/departmentList.module.js","app/js/department/departmentList.component.js","app/js/employee/employee.module.js","app/js/employee/employee.component.js","app/js/employee/employeeList.module.js","app/js/employee/employeeList.component.js"],"names":["app","angular","module","err","run","$templateCache","put","config","$locationProvider","$routeProvider","localStorageServiceProvider","setPrefix","hashPrefix","when","template","otherwise","service","$http","localStorageService","saveToLocalStorage","data","setCollectionToLocalStorage","name","ids","collection","map","item","id","set","forEach","this","afterDataIsInLocalStorage","callback","getDataThroughHttp","get","then","response","isSupported","isThereEmployeeData","component","bindings","onNewAvatar","templateUrl","controller","$scope","self","isNotValidType","isNotValidSize","avatarFormatRegexp","maxAvatarKBSize","maxAvatarSize","uploadImage","files","reader","FileReader","file","test","type","size","$apply","onload","event","result","target","avatar","readAsDataURL","employeeData","departmentList","setDepartmentList","$routeParams","employeeId","photoData","employee","department","setNewPhoto","maxId","Math","max","apply","newId","String","parseInt","push","photo","setEmployee","setDepartment","onAvatarChange","avatarUrl","console","log","departmentId","employeeList","setEmployeeList","filter"],"mappings":"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","file":"main-4a5cfa61b6.js","sourcesContent":["//HEAD \n(function(app) {\ntry { app = angular.module(\"employeeTemplates\"); }\ncatch(err) { app = angular.module(\"employeeTemplates\", []); }\napp.run([\"$templateCache\", function($templateCache) {\n\"use strict\";\n\n$templateCache.put(\"js/avatarUploader/avatarUploader.template.html\",\"<div class=\\\"avatar-image-input-box\\\">\\n\" +\n    \"    <input accept=\\\".gif,.bmp,.jpg,.jpeg,.png,.svg\\\"\\n\" +\n    \"           type=\\\"file\\\"\\n\" +\n    \"           ng-model=\\\"$ctrl.avatarUrl\\\"\\n\" +\n    \"           onchange=\\\"angular.element(this).scope().uploadImage(this.files)\\\" />\\n\" +\n    \"</div>\\n\" +\n    \"<button type=\\\"button\\\"\\n\" +\n    \"        class=\\\"avatar-image-button btn btn-default btn-s\\\"\\n\" +\n    \"        onclick=\\\"$(this).closest('avatar-uploader').find('input[type=\\\\'file\\\\']').click()\\\">\\n\" +\n    \"    <span class=\\\"glyphicon glyphicon-upload\\\"></span> аватар\\n\" +\n    \"</button>\\n\" +\n    \"\\n\" +\n    \"<span class=\\\"error-message\\\" ng-if=\\\"$ctrl.isNotValidType\\\">\\n\" +\n    \"    Недопустимый тип файла.\\n\" +\n    \"</span>\\n\" +\n    \"<span class=\\\"error-message\\\" ng-if=\\\"$ctrl.isNotValidSize\\\">\\n\" +\n    \"    Недопустимый размер. Превышено {{$ctrl.maxAvatarKBSize}}КБ.\\n\" +\n    \"</span>\")\n\n$templateCache.put(\"js/department/departmentList.template.html\",\"\\n\" +\n    \"<div class=\\\"page-header jumbotron\\\">\\n\" +\n    \"    <h1>Отделы</h1>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"employee-catalog container\\\">\\n\" +\n    \"    <ul>\\n\" +\n    \"        <li class=\\\"col-lg-4 col-md-6 col-sm-6\\\" ng-repeat=\\\"department in $ctrl.departmentList\\\">\\n\" +\n    \"            <a class=\\\"department-button\\\" href=\\\"#!/departments/{{department.id}}/employees\\\">\\n\" +\n    \"                <span>{{department.name}}</span>\\n\" +\n    \"            </a>\\n\" +\n    \"        </li>\\n\" +\n    \"    </ul>\\n\" +\n    \"</div>\\n\" +\n    \"<footer class=\\\"footer\\\">\\n\" +\n    \"</footer>\")\n\n$templateCache.put(\"js/employee/employee.template.html\",\"\\n\" +\n    \"\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"page-header jumbotron\\\">\\n\" +\n    \"    <h1 ng-if=\\\"$ctrl.employee\\\">\\n\" +\n    \"        Сотрудник\\n\" +\n    \"    </h1>\\n\" +\n    \"    <h1 ng-if=\\\"!$ctrl.employee\\\">\\n\" +\n    \"        Нет такого сотрудника\\n\" +\n    \"    </h1>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"employee-navbar\\\">\\n\" +\n    \"    <nav class=\\\"navbar navbar-default container employee-navbar\\\">\\n\" +\n    \"        <div class=\\\"container-fluid\\\">\\n\" +\n    \"            <a class=\\\"navbar-brand\\\" href=\\\"#!/departments/\\\">\\n\" +\n    \"                Отделы\\n\" +\n    \"            </a>\\n\" +\n    \"            <a ng-if=\\\"$ctrl.department\\\" class=\\\"navbar-brand\\\" href=\\\"#!/departments/{{$ctrl.department.id}}/employees\\\">\\n\" +\n    \"                {{$ctrl.department.name}}\\n\" +\n    \"            </a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </nav>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"<div ng-if=\\\"$ctrl.employee\\\" class=\\\"employee-catalog container\\\">\\n\" +\n    \"    <div class=\\\"media employee-item\\\" ng-if=\\\"$ctrl.employee\\\">\\n\" +\n    \"        <div class=\\\"media-left avatar\\\">\\n\" +\n    \"            <img class=\\\"avatar-image\\\" data-ng-src=\\\"{{ $ctrl.photoData }}\\\">\\n\" +\n    \"            <avatar-uploader on-new-avatar=\\\"$ctrl.setNewPhoto(avatar)\\\"></avatar-uploader>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div class=\\\"media-body\\\">\\n\" +\n    \"            <h4>{{ $ctrl.employee.name }}</h4>\\n\" +\n    \"            <p>\\n\" +\n    \"                <span class=\\\"field-hint\\\">Телефон:</span> {{ $ctrl.employee.phone }}\\n\" +\n    \"            </p>\\n\" +\n    \"            <p>\\n\" +\n    \"                <span class=\\\"field-hint\\\">Отдел:</span> {{ $ctrl.department.name }}\\n\" +\n    \"            </p>\\n\" +\n    \"        </div>\\n\" +\n    \"    </div>\\n\" +\n    \"</div>\\n\" +\n    \"<footer class=\\\"footer\\\">\\n\" +\n    \"</footer>\\n\" +\n    \"\\n\" +\n    \"\")\n\n$templateCache.put(\"js/employee/employeeList.template.html\",\"\\n\" +\n    \"<div class=\\\"page-header jumbotron\\\">\\n\" +\n    \"    <div ng-if=\\\"$ctrl.department\\\">\\n\" +\n    \"        <h1>Сотрудники</h1>\\n\" +\n    \"        <h2>отдела «{{$ctrl.department.name}}»</h2>\\n\" +\n    \"    </div>\\n\" +\n    \"    <h2 ng-if=\\\"!$ctrl.department\\\">\\n\" +\n    \"        Нет такого отдела\\n\" +\n    \"    </h2>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"employee-navbar\\\">\\n\" +\n    \"    <nav class=\\\"navbar navbar-default container employee-navbar department-list-container\\\">\\n\" +\n    \"        <div class=\\\"container-fluid\\\">\\n\" +\n    \"            <a class=\\\"navbar-brand\\\" href=\\\"#!/departments/\\\">Отделы</a>\\n\" +\n    \"        </div>\\n\" +\n    \"    </nav>\\n\" +\n    \"</div>\\n\" +\n    \"\\n\" +\n    \"<div ng-if=\\\"$ctrl.department\\\" class=\\\"employee-catalog container department-list-container\\\">\\n\" +\n    \"    <h3 class=\\\"official-info-header\\\" ng-if=\\\"!$ctrl.employeeList.length\\\">Отдел пуст</h3>\\n\" +\n    \"    <h3 class=\\\"employee-count\\\">{{ $ctrl.employeeList.length }} сотрудник{{ ($ctrl.employeeList.length > 10 && $ctrl.employeeList.length < 19) ? 'ов' : {\\n\" +\n    \"            0 : 'ов',\\n\" +\n    \"            1 : '',\\n\" +\n    \"            2 : 'а',\\n\" +\n    \"            3 : 'а',\\n\" +\n    \"            4 : 'а',\\n\" +\n    \"            5 : 'ов',\\n\" +\n    \"            6 : 'ов',\\n\" +\n    \"            7 : 'ов',\\n\" +\n    \"            8 : 'ов',\\n\" +\n    \"            9 : 'ов',\\n\" +\n    \"        }[$ctrl.employeeList.length % 10] }}:</h3>\\n\" +\n    \"    <ul>\\n\" +\n    \"        <li class=\\\"media employee-item\\\" ng-repeat=\\\"employee in $ctrl.employeeList\\\">\\n\" +\n    \"            <div class=\\\"media-body\\\">\\n\" +\n    \"                <h4>{{employee.name}}</h4>\\n\" +\n    \"            </div><div class=\\\"media-right\\\">\\n\" +\n    \"                <a href=\\\"#!/employees/{{employee.id}}\\\"\\n\" +\n    \"                   class=\\\"btn btn-default pull-right\\\" >\\n\" +\n    \"                    <div class=\\\"glyphicon glyphicon-file\\\"></div>\\n\" +\n    \"                </a>\\n\" +\n    \"            </div>\\n\" +\n    \"        </li>\\n\" +\n    \"    </ul>\\n\" +\n    \"</div>\\n\" +\n    \"<footer class=\\\"footer\\\">\\n\" +\n    \"</footer>\")\n}]);\n})();","\r\nangular.module('employeeCatalog', [\r\n    'ngAnimate',\r\n    'employeeTemplates',\r\n    'LocalStorageModule',\r\n    'ngRoute',\r\n    'avatarUploader',\r\n    'departmentList',\r\n    'employeeList',\r\n    'employee'\r\n]);\r\n","\r\n\r\nangular.\r\n    module('employeeCatalog').\r\n    config(['$locationProvider', '$routeProvider', 'localStorageServiceProvider',\r\n        function config ($locationProvider, $routeProvider, localStorageServiceProvider) {\r\n\r\n            localStorageServiceProvider.setPrefix('employeeCatalog');\r\n\r\n            $locationProvider.hashPrefix('!');\r\n            /*\r\n                $locationProvider.html5Mode({\r\n                    enabled : true,\r\n                    requiredBase : false\r\n                });\r\n            */\r\n\r\n            $routeProvider\r\n                .when('/departments', {\r\n                    template : '<department-list></department-list>'\r\n                })\r\n                .when('/departments/:departmentId/employees', {\r\n                    template : '<employee-list></employee-list>'\r\n                })\r\n                .when('/employees/:employeeId', {\r\n                    template : '<employee></employee>'\r\n                })\r\n                .otherwise('/departments');\r\n\r\n        }]);","\r\n\r\nangular\r\n    .module('employeeCatalog')\r\n    .service('employeeData', ['$http', 'localStorageService', function ($http, localStorageService) {\r\n        var data;\r\n\r\n        function saveToLocalStorage (data) {\r\n\r\n            function setCollectionToLocalStorage (data, name) {\r\n                var collection = data[name],\r\n                    ids;\r\n\r\n                ids = collection.map(function (item) {\r\n                    return item.id;\r\n                });\r\n                localStorageService.set(name + 'Ids', ids);\r\n                collection.forEach(function (item) {\r\n                    localStorageService.set(name + '#' + item.id, item);\r\n                });\r\n            }\r\n\r\n            setCollectionToLocalStorage(data, 'departments');\r\n            setCollectionToLocalStorage(data, 'employees');\r\n            setCollectionToLocalStorage(data, 'photos');\r\n\r\n            localStorageService.set('isThereEmployeeData', true);\r\n        }\r\n\r\n        this.afterDataIsInLocalStorage = function (callback) {\r\n            var isThereEmployeeData;\r\n            if (localStorageService.isSupported) {\r\n                isThereEmployeeData = localStorageService.get('isThereEmployeeData');\r\n                if (isThereEmployeeData) {\r\n                    callback();\r\n                } else {\r\n                    getDataThroughHttp();\r\n                }\r\n            } else {\r\n                getDataThroughHttp();\r\n            }\r\n\r\n            function getDataThroughHttp () {\r\n                $http.get('./data.json')\r\n                    .then(function (response) {\r\n                        if (localStorageService.isSupported) {\r\n                            saveToLocalStorage(response.data);\r\n                        }\r\n                        callback();\r\n                    });\r\n            }\r\n        };\r\n\r\n    }]);","\r\n\r\nangular\r\n    .module('avatarUploader', []);","\r\n\r\nangular\r\n    .module('avatarUploader')\r\n    .component('avatarUploader', {\r\n        bindings : {\r\n            onNewAvatar : '&'\r\n        },\r\n        templateUrl : 'js/avatarUploader/avatarUploader.template.html',\r\n        controller : ['$scope', function ($scope) {\r\n            var self = this;\r\n            this.isNotValidType = false;\r\n            this.isNotValidSize = false;\r\n            this.avatarFormatRegexp = /^image\\/(:?bmp)|(:?jpg)|(:?jpeg)|(:?png)|(:?gif)|(:?svg)$/;\r\n            this.maxAvatarKBSize = 15;\r\n            this.maxAvatarSize = this.maxAvatarKBSize * 1024;\r\n\r\n            $scope.uploadImage = function (files) {\r\n                var reader = new FileReader(),\r\n                    file = files[0];\r\n\r\n                self.isNotValidType = false;\r\n                self.isNotValidSize = false;\r\n                if (!self.avatarFormatRegexp.test(file.type)) {\r\n                    self.isNotValidType = true;\r\n                    $scope.$apply();\r\n                    return;\r\n                } else if (file.size > self.maxAvatarSize) {\r\n                    self.isNotValidSize = true;\r\n                    $scope.$apply();\r\n                    return;\r\n                }\r\n\r\n                reader.onload = function(event) {\r\n                    var result = event.target.result;\r\n                    self.onNewAvatar({\r\n                        'avatar' : result\r\n                    });\r\n                };\r\n                reader.readAsDataURL(file);\r\n            };\r\n        }]\r\n    });\r\n\r\n","\r\n\r\nangular\r\n    .module('departmentList', []);","\r\n\r\nangular\r\n    .module('departmentList')\r\n    .component('departmentList', {\r\n        'templateUrl' : 'js/department/departmentList.template.html',\r\n        'controller' : ['employeeData', '$scope', 'localStorageService', function (employeeData, $scope, localStorageService) {\r\n            var self = this;\r\n            this.departmentList = [];\r\n\r\n            this.setDepartmentList = function (departmentList) {\r\n                this.departmentList = departmentList;\r\n            };\r\n\r\n            employeeData.afterDataIsInLocalStorage(function () {\r\n                var ids    = localStorageService.get('departmentsIds'),\r\n                    result = ids.map(function (id) {\r\n                        return localStorageService.get('departments#' + id);\r\n                    });\r\n                self.setDepartmentList(result);\r\n            });\r\n        }]\r\n    });","\r\nangular.module('employee', []);\r\n","\r\n\r\nangular\r\n    .module('employee')\r\n    .component('employee', {\r\n        'templateUrl' : 'js/employee/employee.template.html',\r\n        'controller' : ['employeeData', '$scope', '$routeParams', 'localStorageService', function (employeeData, $scope, $routeParams, localStorageService) {\r\n            var self       = this,\r\n                employeeId = $routeParams.employeeId;\r\n\r\n            this.photoData = null;\r\n            this.employee = null;\r\n            this.department = null;\r\n\r\n            this.setNewPhoto = function (data) {\r\n                var ids   = localStorageService.get('photosIds'),\r\n                    maxId = Math.max.apply(null, ids),\r\n                    newId = String(parseInt(maxId, 10) + 1);\r\n\r\n                ids.push(newId);\r\n                localStorageService.set('photosIds', ids);\r\n                localStorageService.set('photos#' + newId, {\r\n                    data : data,\r\n                    id : newId\r\n                });\r\n                self.photoData = data;\r\n                self.employee.photo = newId;\r\n                localStorageService.set('employees#' + self.employee.id, self.employee);\r\n                $scope.$apply();\r\n            };\r\n\r\n            this.setEmployee = function (employee) {\r\n                this.employee = employee;\r\n            };\r\n\r\n            this.setDepartment = function (department) {\r\n                this.department = department;\r\n            };\r\n\r\n            this.onAvatarChange = function () {\r\n                var avatarUrl = this.avatarUrl;\r\n                console.log(avatarUrl);\r\n            };\r\n\r\n            employeeData.afterDataIsInLocalStorage(function (data) {\r\n                var employee,\r\n                    photos,\r\n                    photo,\r\n                    department;\r\n\r\n                employee = localStorageService.get('employees#' + employeeId);\r\n                if (employee) {\r\n                    photo = localStorageService.get('photos#' + employee.photo);\r\n                    department = localStorageService.get('departments#' + employee.department);\r\n                    if (photo) {\r\n                        self.photoData = photo['data'];\r\n                    }\r\n                    self.setEmployee(employee);\r\n                    self.setDepartment(department);\r\n                }\r\n            });\r\n\r\n        }]\r\n    });","\r\nangular.module('employeeList', []);\r\n","\r\n\r\nangular\r\n    .module('employeeList')\r\n    .component('employeeList', {\r\n        'templateUrl' : 'js/employee/employeeList.template.html',\r\n        'controller'  : ['employeeData', '$scope', '$routeParams', 'localStorageService', function (employeeData, $scope, $routeParams, localStorageService) {\r\n            var self         = this,\r\n                departmentId = $routeParams.departmentId;\r\n\r\n            this.department   = {};\r\n            this.employeeList = [];\r\n            this.setEmployeeList = function (employeeList) {\r\n                this.employeeList = employeeList;\r\n            };\r\n            this.setDepartment = function (department) {\r\n                this.department = department;\r\n            };\r\n            employeeData.afterDataIsInLocalStorage(function () {\r\n                var ids    = localStorageService.get('employeesIds'),\r\n                    result = ids.map(function (id) {\r\n                        return localStorageService.get('employees#' + id);\r\n                    }).filter(function (employee) {\r\n                        return employee.department === departmentId;\r\n                    });\r\n                self.setEmployeeList(result);\r\n                self.setDepartment(localStorageService.get('departments#' + departmentId));\r\n            });\r\n\r\n        }]\r\n    });"],"sourceRoot":"/source/"}